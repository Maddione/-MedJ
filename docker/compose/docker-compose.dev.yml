services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - ../env/web.dev.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-medj}
      - POSTGRES_USER=${POSTGRES_USER:-medj}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-medjpass}
    volumes:
      - medj_pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 10

  ocrapi:
    build:
      context: ../../
      dockerfile: Dockerfile
    command: sh -lc "flask run --host=0.0.0.0 --port=${PORT:-5000}"
    working_dir: /app/ocrapi
    env_file:
      - ../env/ocr.dev.env
    volumes:
      - ../../secrets:/secrets:ro
      - ../../:/app
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:${PORT:-5000}/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    build:
      context: ../../
      dockerfile: Dockerfile
    entrypoint: sh -lc "/app/entrypoint.dev.sh"
    working_dir: /app
    env_file:
      - ../env/web.dev.env
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-/app/secrets/django-key.txt}
      - OPENAI_API_KEY_FILE=${OPENAI_API_KEY_FILE:-/app/secrets/openai-key.txt}
      - OCR_API_URL=${OCR_API_URL:http:-//ocrapi:5000/ocr}
    volumes:
      - ../../secrets:/app/secrets:ro
      - ../../:/app
    depends_on:
      db:
        condition: service_healthy
      ocrapi:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8000/healthcheck/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

volumes:
  medj_pg_data:
