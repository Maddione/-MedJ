services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - ../../env/web.dev.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  web:
    build:
      context: ../../
      dockerfile: docker/web/Dockerfile
    restart: unless-stopped
    env_file:
      - ../../env/web.dev.env
    ports:
      - "8000:8000"
    volumes:
      - ../../:/app
    depends_on:
      db:
        condition: service_healthy

  ocr:
    build:
      context: ../ocrapi
      dockerfile: Dockerfile
    env_file:
      - ../../env/ocr.dev.env
    ports: ["5000:5000"]
    volumes:
      - ../../ocrapi:/app
      - ../../ocrapi/ocr-key-vision.json:/secrets/ocr-key-vision.json:ro


volumes:
  pgdata_dev:
