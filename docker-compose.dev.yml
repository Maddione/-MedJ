services:
  db:
    image: postgres:16
    container_name: medj2_db_dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-medj}
      POSTGRES_USER: ${POSTGRES_USER:-medj}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-medj}
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-medj} -d ${POSTGRES_DB:-medj}"]
      interval: 5s
      timeout: 3s
      retries: 30

  ocrapi:
    build:
      context: ./ocrapi
      dockerfile: dockerfile
    image: medj2_ocrapi_dev
    container_name: medj2_ocrapi_dev
    env_file:
      - .env.ocr
    environment:
      - FLASK_ENV=development
      - PORT=5000
      - GOOGLE_APPLICATION_CREDENTIALS=/app/ocr-key-vision.json
    volumes:
      - ./ocrapi:/app
      - ./secrets/ocr-key-vision.json:/app/ocr-key-vision.json:ro
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5000/health || curl -sf http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: medj2_web_dev
    container_name: medj2_web_dev
    command: ["./entrypoint.dev.sh"]
    env_file:
      - .env.dev
    environment:
      - DJANGO_SETTINGS_MODULE=medj.settings.dev
      - TAILWIND_WATCH=1
      - OCR_API_URL=http://ocrapi:5000/ocr
      - DATABASE_URL=postgres://${POSTGRES_USER:-medj}:${POSTGRES_PASSWORD:-medj}@db:5432/${POSTGRES_DB:-medj}
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-medj}
      - POSTGRES_USER=${POSTGRES_USER:-medj}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-medj}
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      ocrapi:
        condition: service_started
    tty: true
    stdin_open: true

volumes:
  pgdata_dev:
